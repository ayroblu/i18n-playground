{"version":3,"sources":["Direction.module.scss","Ideas.module.scss","Direction.tsx","Ideas.messages.tsx","i18n/helper.ts","Ideas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Direction","className","styles","app","languageSection","lang","sideBar","content","spacer","combined","enMessages","message","counter","plurals","num","Object","keys","length","Error","res","Intl","PluralRules","select","JSON","stringify","getEnPlural","one","other","getMessage","defaultMessage","messages","key","localeMessages","getMessageFn","en","Ideas","React","useState","setCounter","handleCounter","useCallback","noSelect","onClick","AppRoute","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6985a8ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Direction_app__3DP2C\",\"languageSection\":\"Direction_languageSection__3j8SY\",\"sideBar\":\"Direction_sideBar__3AWd4\",\"content\":\"Direction_content__2vG37\",\"spacer\":\"Direction_spacer__12kp2\",\"combined\":\"Direction_combined__1kZJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noSelect\":\"Ideas_noSelect__r4ZwP\"};","import React from \"react\";\nimport styles from \"./Direction.module.scss\";\n\nexport function Direction() {\n  return (\n    <div className={styles.app}>\n      <section className={styles.languageSection} lang=\"en\">\n        <ul className={styles.sideBar}>\n          <h3>Sidebar heading</h3>\n          <li>Item 1</li>\n          <li>Item 2</li>\n        </ul>\n        <section className={styles.content}>\n          <h1>This is my header title</h1>\n          <p>This is my child content</p>\n          <p>\n            This is a long piece of text that's purpose is to show how vertical\n            languages need to wrap on a page. In a horizontal top to bottom\n            context, it doesn't make much difference as we're very familiar with\n            it\n          </p>\n          <div className={styles.spacer} />\n          <h3>This is my header title</h3>\n          <p>This is my child content</p>\n        </section>\n      </section>\n      <section className={styles.languageSection} lang=\"zh\">\n        <ul className={styles.sideBar}>\n          <h3>侧栏标题</h3>\n          <li>\n            项目<span className={styles.combined}>1</span>\n          </li>\n          <li>\n            项目<span className={styles.combined}>2</span>\n          </li>\n        </ul>\n        <section className={styles.content}>\n          <h1>这个是我的标头</h1>\n          <p>写出来的中文</p>\n          <p>\n            這是一長段文字，目的是說明垂直語言如何在頁面上換行。\n            在上下水平的環境中，它並沒有太大的區別，因為我們對此非常熟悉\n          </p>\n          <div className={styles.spacer} />\n          <h3>这个是我的标头</h3>\n          <p>写出来的中文</p>\n          <div className={styles.spacer} />\n          <h3>这个是我的标头</h3>\n          <p>写出来的中文</p>\n          <div className={styles.spacer} />\n          <h3>这个是我的标头</h3>\n          <p>写出来的中文</p>\n          <div className={styles.spacer} />\n          <h3>这个是我的标头</h3>\n          <p>写出来的中文</p>\n        </section>\n      </section>\n      <section className={styles.languageSection} lang=\"mn\">\n        <ul className={styles.sideBar}>\n          <h3>ᠬᠠᠵᠠᠭᠤ ᠶᠢᠨ ᠬᠡᠰᠡᠭ</h3>\n          <li>\n            <span className={styles.combined}>1</span> ᠍ ᠳᠤᠭᠠᠷ ᠵᠦᠢᠯ\n          </li>\n          <li>\n            <span className={styles.combined}>2</span> ᠍ ᠳᠤᠭᠠᠷ ᠵᠦᠢᠯ\n          </li>\n        </ul>\n        <section className={styles.content}>\n          <h1>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h1>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n          <p>\n            ᠡᠨᠡ ᠪᠣᠯ ᠲᠧᠺᠰᠲ ᠦᠨ ᠤᠷᠲᠤ ᠬᠡᠰᠡᠭ ᠪᠥᠭᠡᠳ ᠪᠣᠰᠤᠭ᠎ᠠ ᠬᠡᠯᠡ ᠨᠦᠭᠦᠳ ᠨᠢ ᠬᠠᠭᠤᠳᠠᠰᠤ ᠶᠢ\n            ᠬᠡᠷᠬᠢᠨ ᠪᠣᠭᠣᠵᠤ ᠥᠭᠬᠦ ᠶᠢ ᠬᠠᠷᠠᠭᠤᠯᠬᠤ ᠶᠠᠪᠤᠳᠠᠯ ᠶᠤᠮ᠃ ᠬᠡᠪᠲᠡᠭᠡ ᠳᠡᠭᠡᠳᠦ ᠳᠣᠭᠣᠳᠤ\n            ᠬᠡᠰᠡᠭ ᠡᠴᠡ ᠬᠠᠷᠠᠬᠤ ᠳᠤ ᠡᠨᠡ ᠨᠢ ᠲᠡᠶᠢᠮᠦ ᠴᠤ ᠶᠡᠬᠡ ᠢᠯᠭᠠᠭ᠎ᠠ ᠲᠠᠢ ᠪᠢᠰᠢ ᠶᠤᠮ\n          </p>\n          <div className={styles.spacer} />\n          <h3>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h3>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n          <div className={styles.spacer} />\n          <h3>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h3>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n          <div className={styles.spacer} />\n          <h3>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h3>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n          <div className={styles.spacer} />\n          <h3>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h3>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n          <div className={styles.spacer} />\n          <h3>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠭᠠᠷᠴᠠᠭ</h3>\n          <p>ᠡᠨᠡ ᠪᠣᠯ ᠮᠢᠨᠤ ᠬᠡᠦᠬᠡᠳ ᠦᠨ ᠠᠭᠤᠯᠭ᠎ᠠ</p>\n        </section>\n      </section>\n      <section className={styles.languageSection} lang=\"ar\">\n        <ul className={styles.sideBar}>\n          <h3>عنوان الشريط الجانبي</h3>\n          <li>البند 1</li>\n          <li>البند 2</li>\n        </ul>\n        <section className={styles.content}>\n          <h1>هذا رأسي</h1>\n          <p>هذا المحتوى الخاص بي</p>\n        </section>\n      </section>\n    </div>\n  );\n}\n","import { getMessageFn, getEnPlural } from \"./i18n/helper\";\n\nconst enMessages = {\n  message: (counter: number) => {\n    return `You have clicked this paragraph ${counter} ${getEnPlural(\n      {\n        one: \"time\",\n        other: \"times\",\n      },\n      counter\n    )}`;\n  },\n};\nconst messages: { [key: string]: typeof enMessages | undefined } = {\n  en: enMessages,\n};\n\nexport const getMessage = getMessageFn(enMessages, messages);\n","type EnPluralTypes = \"one\" | \"other\";\ntype EnPluralMap = { [k in EnPluralTypes]: string };\n\nexport const getMessageFn = <\n  A extends { [key: string]: any },\n  B extends { [key: string]: A | undefined }\n>(\n  defaultMessage: A,\n  messages: B\n) => (key: keyof A) => {\n  const locale = \"en\";\n  const localeMessages = messages[locale];\n  return localeMessages ? localeMessages[key] : defaultMessage[key];\n};\n\nexport function getEnPlural(plurals: EnPluralMap, num: number): string {\n  if (Object.keys(plurals).length === 0) {\n    throw new Error(\"No plurals provided\");\n  }\n  const res = new Intl.PluralRules().select(num) as EnPluralTypes;\n  const plural = plurals[res];\n  if (!plural)\n    throw new Error(\n      `Did not find a result for ${JSON.stringify(plurals)}, ${res}, ${num}`\n    );\n  return plurals[res];\n}\n","import React from \"react\";\nimport styles from \"./Ideas.module.scss\";\nimport { getMessage } from \"./Ideas.messages\";\n\n// https://www.freecodecamp.org/news/how-to-get-started-with-internationalization-in-javascript-c09a0d2cd834/\nexport const Ideas: React.FC = () => {\n  const [counter, setCounter] = React.useState(0);\n  const handleCounter = React.useCallback(() => {\n    setCounter(counter + 1);\n  }, [counter]);\n\n  return (\n    <div>\n      <h1>Thoughts behind internationalisation</h1>\n      <p className={styles.noSelect} onClick={handleCounter}>\n        {getMessage(\"message\")(counter)}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Direction } from \"./Direction\";\nimport { Ideas } from \"./Ideas\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst AppRoute = {\n  Direction: \"/\",\n  Ideas: \"/ideas\",\n} as const;\n\nfunction App() {\n  return (\n    <Router>\n      <Link to={AppRoute.Direction}>Direction</Link>\n      <Link to={AppRoute.Ideas}>Ideas</Link>\n      <Switch>\n        <Route path={AppRoute.Ideas}>\n          <Ideas />\n        </Route>\n        <Route path={AppRoute.Direction}>\n          <Direction />\n        </Route>\n        <Redirect to={AppRoute.Direction} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}